{"version":3,"file":"static/js/276.a06f0e4c.chunk.js","mappings":"iOAaA,MAkEA,EAlEcA,KAEZ,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MAEbC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,MAW/C,OARAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,GAAa,qCAAqCN,KAAWO,MAC1DC,IACCL,EAAeK,EAAKC,MAAM,GAAG,GAEhC,GACA,CAACT,KAGFU,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,MAAM,qDACNC,YAAY,kGAAsBC,UAElCJ,EAAAA,EAAAA,KAAA,WAASK,GAAG,gBAAeD,SAExBZ,IACCc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaH,SAAA,EAC1BJ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAaH,UAC1BJ,EAAAA,EAAAA,KAACQ,IAAW,CACVC,SAAS,EACTC,IAAK,mCAAmCpB,IACxCqB,MAAM,OACNC,OAAO,OACPC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,KAAM,QAIjDV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaH,SAAA,EAC1BJ,EAAAA,EAAAA,KAAA,MAAIO,UAAU,eAAcH,SAAEZ,EAAYyB,QAAQf,SAClDI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BJ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,KAAIH,UACjBJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,GAAI,YAAY3B,EAAYyB,QAAQG,YAAYhB,SAAEZ,EAAYyB,QAAQI,kBAE9Ef,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOH,SAAA,EACpBE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMH,SAAA,EACpBJ,EAAAA,EAAAA,KAACsB,EAAAA,IAAM,IACN9B,EAAY+B,WAAWC,cAE1BlB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMH,SAAA,EACpBJ,EAAAA,EAAAA,KAACyB,EAAAA,IAAM,IACNjC,EAAY+B,WAAWG,cAE1BpB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,UAASH,SAAA,EACvBJ,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACPnC,EAAY+B,WAAWK,0BAKhC5B,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAaH,SACzBZ,EAAYyB,QAAQd,oBAKxB,C,gDCzEJ,MAED0B,EAAU,CACdC,OAAQ,CACNC,WAAY,MAEdC,QAAS,CACP,iBAAkBC,qDAClB,kBAAmB,+BAKVrC,EAAesC,UAC3B,MAAM,KAACpC,SAAcqC,EAAAA,EAAMC,IAAI,sCAAe1B,IAAOmB,GAEpD,OADDQ,QAAQC,IAAIxC,GACJA,CAAI,C","sources":["pages/Video.jsx","utils/api.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Main from \"../components/section/Main\";\r\n\r\n//동영상 플레이어 라이브러리\r\nimport ReactPlayer from \"react-player\";\r\n\r\n//아이콘\r\nimport { CiChat1 } from \"react-icons/ci\";\r\nimport { CiStar } from \"react-icons/ci\";\r\nimport { CiRead } from \"react-icons/ci\";\r\nimport { fetchFromAPI } from \"../utils/api\";\r\n\r\nconst Video = () => {\r\n  //파라미터 저장\r\n  const { videoId } = useParams();\r\n  //영상에 대한 데이터객체를 받을 상태관리 객체\r\n  const [videoDetail, setVideoDetail] = useState(null);\r\n\r\n  //파라미터로 동영상요청, statistics 객체에는 동영상에 대한 통계 포함\r\n  useEffect(() => {\r\n    fetchFromAPI(`videos?part=snippet,statistics&id=${videoId}`).then(\r\n      (data) => {\r\n        setVideoDetail(data.items[0]); //영상데이터를 상태에 저장\r\n      }\r\n    );\r\n  }, [videoId]); //videoId의 변경을 감지하고 그때만 실행\r\n\r\n  return (\r\n    <Main\r\n      title=\"유튜브 비디오 영상\"\r\n      description=\"유튜브 비디오 영상을 볼 수 있습니다\"\r\n    >\r\n      <section id=\"videoViewPage\">\r\n        {/*영상에 대한 데이터가 있으면 표시 */}\r\n        {videoDetail && (\r\n          <div className=\"video__view\">\r\n            <div className=\"video__play\">\r\n              <ReactPlayer\r\n                playing={true}\r\n                url={`https://www.youtube.com/watch?v=${videoId}`}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                style={{ position: \"absolute\", top: 0, left: 0 }}\r\n              />\r\n            </div>\r\n            {/*타이틀과 영상에 관한 내용이 들어갈 부분 */}\r\n            <div className=\"video__info\">\r\n              <h2 className=\"video__title\">{videoDetail.snippet.title}</h2>\r\n              <div className=\"video__channel\">\r\n                <div className=\"id\">\r\n                  <Link to={`/channel/${videoDetail.snippet.channelId}`}>{videoDetail.snippet.channelTitle}</Link>\r\n                </div>\r\n                <div className=\"count\">\r\n                  <span className=\"view\">\r\n                    <CiRead />\r\n                    {videoDetail.statistics.viewCount}\r\n                  </span>\r\n                  <span className=\"like\">\r\n                    <CiStar />\r\n                    {videoDetail.statistics.likeCount}\r\n                  </span>\r\n                  <span className=\"comment\">\r\n                    <CiChat1 />\r\n                    {videoDetail.statistics.commentCount}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"video__desc\">\r\n              {videoDetail.snippet.description}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import axios from 'axios';\r\n\r\nexport const BASE_URL = 'https://youtube-v31.p.rapidapi.com'\r\n\r\nconst options = {\r\n  params: {\r\n    maxResults: '30'\r\n  },\r\n  headers: {\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY,\r\n    'x-rapidapi-host': 'youtube-v31.p.rapidapi.com'\r\n  }\r\n};\r\n\r\n//전달받은 인자(url)를 가지고 api키와 URL파라미터를 조립해서 함수를 호출한 곳으로 반환\r\nexport const fetchFromAPI = async (url) => {\r\n\tconst {data} = await axios.get(`${BASE_URL}/${url}`, options);\r\n\tconsole.log(data);\r\n  return data;\r\n}"],"names":["Video","videoId","useParams","videoDetail","setVideoDetail","useState","useEffect","fetchFromAPI","then","data","items","_jsx","Main","title","description","children","id","_jsxs","className","ReactPlayer","playing","url","width","height","style","position","top","left","snippet","Link","to","channelId","channelTitle","CiRead","statistics","viewCount","CiStar","likeCount","CiChat1","commentCount","options","params","maxResults","headers","process","async","axios","get","console","log"],"sourceRoot":""}